name: CI - Trigger Automation via API

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  run-automation:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Set up JDK for Spring Boot
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Build Spring Boot backend
      - name: Build Spring Boot
        run: |
          cd backend/automation-engine
          mvn clean install -DskipTests

      # Start Spring Boot backend in background with JWT secret
      - name: Start Spring Boot backend
        run: |
          cd backend/automation-engine
          mvn spring-boot:run &
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      # Wait for backend startup with 120s timeout
      - name: Wait for backend startup
        run: |
          echo "Waiting for backend to start (max 120s)..."
          for i in $(seq 1 120); do
            if curl -s http://localhost:8080/actuator/health | grep '"status":"UP"' > /dev/null; then
              echo "Backend started!"
              exit 0
            fi
            sleep 1
          done
          echo "Backend did not start within 120 seconds."
          exit 1

      # Generate JWT token and trigger /api/tests/run
      - name: Trigger automation with JWT
        id: run_tests
        run: |
          echo "Generating JWT token..."
          TOKEN=$(curl -s -X POST http://localhost:8080/api/auth/login \
            -H "Content-Type: application/json" \
            -d '{"username":"${{ secrets.TEST_USER }}","password":"${{ secrets.TEST_PASS }}"}' \
            | jq -r '.token')
          echo "Generated Token: $TOKEN"

          if [ -z "$TOKEN" ] || [ "$TOKEN" == "null" ]; then
            echo "❌ Failed to generate JWT token."
            exit 1
          fi

          echo "Calling /api/tests/run API with JWT..."
          RESPONSE=$(curl -s -X POST "http://localhost:8080/api/tests/run?tags=@smoke_api" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json")
          
          echo "Response: $RESPONSE"
          RUN_ID=$(echo "$RESPONSE" | jq -r '.runId')
          
          if [ -z "$RUN_ID" ] || [ "$RUN_ID" == "null" ]; then
            echo "❌ Failed to get runId from response."
            exit 1
          fi
          
          echo "✅ Run ID is $RUN_ID"
          echo "run_id=$RUN_ID" >> $GITHUB_ENV

      # Archive test logs/reports
      - name: Archive test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: automation-logs
          path: backend/automation-engine/reports/${{ env.run_id }}.zip
